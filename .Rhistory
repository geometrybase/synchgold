open_z <- with(pgd,o2)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y(1)<-openxl
y(2)<-open_yl
y(3)<-open_yl
clc
clear all
rm(list=ls())
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
data(exampleSim)
# Shorten the data, rolling estimation takes quite some time
exampleSim <- exampleSim[1:600,]
pgd <- read_csv("Copy_of_lbma_datatd.csv")
#openx <-with(pgd,open)
#open_y <- with(pgd,Open)
openx <-with(pgd,openl)
open_y <- with(pgd,o2)
open_z <- with(pgd,o2)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y(1)<-openxl
y(2)<-open_yl
y(3)<-open_yl
y[1]<-openxl
y(,1)<-openxl
y(,2)<-open_yl
y(,3)<-open_yl
y[,1]<-openxl
y[,2]<-open_yl
y[,3]<-open_yl
open_zl<-log(open_y)
y[,1]<-openxl
y[,2]<-open_yl
y[,3]<-open_yl
y<-cbind(openxl,open_yl,open_yl)
exampleSim <- exampleSim[1:600,]
View(exampleSim)
View(y)
View(exampleSim)
y<-array(32487,3)
y[,1]<-openxl
y[,2]<-open_yl
y[,3]<-open_yl
y<-array(32487,dim(3))
y<-array(32487,3)
y<-array([openxl open_yl],2)
y<-array((openxl open_yl),2)
y<-array([openxl,open_yl],2)
y<-array(cbind(openxl,open_yl),2)
y<-array(cbind(openxl,open_yl),2)
y<-array([openxl,open_yl],2)
y <- array(NA,c(32487,3))
y[,1]<-openxl
y[,2]<-open_yl
y[,3]<-open_yl
est <- VAR(y, p = 10, type = "const")
spilloverDY09(est, n.ahead = 100, no.corr = F)
View(exampleSim)
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
data(exampleSim)
# Shorten the data, rolling estimation takes quite some time
exampleSim <- exampleSim[1:600,]
pgd <- read_csv("Copy_of_lbma_datatd.csv")
#openx <-with(pgd,open)
#open_y <- with(pgd,Open)
openx <-with(pgd,openl)
open_y <- with(pgd,o2)
open_z <- with(pgd,o2)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y <- array(NA,c(32487,3))
y[,1]<-openxl
y[,2]<-open_yl
y[,3]<-open_yl
View(exampleSim)
View(y)
dimnames(y ) <- ['y1','y2','y3']
y[,1]<-openxl
y[,2]<-open_yl
y[,3]<-open_yl
est <- VAR(exampleSim, p = 10, type = "const")
spilloverDY09(est, n.ahead = 100, no.corr = F)
View(exampleSim)
y <- array(NA,c(3))
#dimnames(y ) <- ('y1' 'y2' 'y3')
y[,1]<-openxl
y[,2]<-open_yl
y[,3]<-open_yl
y <- array(NA,c(32487,3))
View(pgd)
openx <-with(pgd,openl)
open_y <- with(pgd,o2)
open_z <- with(pgd,o2)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y <- data.frame(y1=openxl,y2=open_yl,y3=open_yl)
est <- VAR(exampleSim, p = 10, type = "const")
spilloverDY09(est, n.ahead = 100, no.corr = F)
y <- data.frame(y1=openxl,y2=open_yl)
#array(NA,c(32487,3))
#dimnames(y ) <- ('y1' 'y2' 'y3')
#y[,1]<-openxl
#y[,2]<-open_yl
#y[,3]<-open_yl
#exampleSim<-cbind(y,open_zl)
est <- VAR(exampleSim, p = 10, type = "const")
spilloverDY09(est, n.ahead = 100, no.corr = F)
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
data(exampleSim)
# Shorten the data, rolling estimation takes quite some time
exampleSim <- exampleSim[1:600,]
pgd <- read_csv("Copy_of_lbma_datatd.csv")
#openx <-with(pgd,open)
#open_y <- with(pgd,Open)
openx <-with(pgd,openl)
open_y <- with(pgd,o2)
open_z <- with(pgd,o2)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y <- data.frame(y1=openxl,y2=open_yl)
#array(NA,c(32487,3))
#dimnames(y ) <- ('y1' 'y2' 'y3')
#y[,1]<-openxl
#y[,2]<-open_yl
#y[,3]<-open_yl
#exampleSim<-cbind(y,open_zl)
est <- VAR(y, p = 10, type = "const")
spilloverDY09(est, n.ahead = 100, no.corr = F)
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
data(exampleSim)
# Shorten the data, rolling estimation takes quite some time
exampleSim <- exampleSim[1:600,]
pgd <- read_csv("Copy_of_lbma_datatd.csv")
#openx <-with(pgd,open)
#open_y <- with(pgd,Open)
openx <-with(pgd,openl)
open_y <- with(pgd,o2)
open_z <- with(pgd,o2)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y <- data.frame(y1=openxl,y2=open_yl)
#array(NA,c(32487,3))
#dimnames(y ) <- ('y1' 'y2' 'y3')
#y[,1]<-openxl
#y[,2]<-open_yl
#y[,3]<-open_yl
#exampleSim<-cbind(y,open_zl)
est <- VAR(y, p = 10, type = "const")
spilloverDY12(est, n.ahead = 100, no.corr = F)
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 10000)
params_est = list(p = 2, type = "const")
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 10000)
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 1000)
plotOverall(sp)
plotTo(sp)
plotFrom(sp)
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 10000)
plotOverall(sp)
plotTo(sp)
plotFrom(sp)
plotTo(sp)
save.image( ) = save(list =ls(all=TRUE), file=".RData")
save.image( ) = save(list =ls(all=TRUE), file="sp1.RData")
save(sp, file = "c:/user/raytine/syncgold/sp.Rdata")
save(sp, file = "c:/data/sp.Rdata")
save(sp, file = "C:\Users\Raytine\synchgold\sp.rdata")
save(sp, file = "C:/Users/Raytine/synchgold/sp.rdata")
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
data(exampleSim)
# Shorten the data, rolling estimation takes quite some time
exampleSim <- exampleSim[1:600,]
pgd <- read_csv("AU9999_datatd.csv")
#openx <-with(pgd,open)
#open_y <- with(pgd,Open)
openx <-with(pgd,openl)
open_y <- with(pgd,o2)
open_z <- with(pgd,o2)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y <- data.frame(y1=openxl,y2=open_yl)
#array(NA,c(32487,3))
#dimnames(y ) <- ('y1' 'y2' 'y3')
#y[,1]<-openxl
#y[,2]<-open_yl
#y[,3]<-open_yl
#exampleSim<-cbind(y,open_zl)
est <- VAR(y, p = 10, type = "const")
spilloverDY12(est, n.ahead = 100, no.corr = F)
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 10000)
plotOverall(sp)
plotFrom(sp)
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
data(exampleSim)
# Shorten the data, rolling estimation takes quite some time
exampleSim <- exampleSim[1:600,]
pgd <- read_csv("AU9999_datatd.csv")
#openx <-with(pgd,open)
#open_y <- with(pgd,Open)
openx <-with(pgd,open)
open_y <- with(pgd,Open)
open_z <- with(pgd,Open)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y <- data.frame(y1=openxl,y2=open_yl)
#array(NA,c(32487,3))
#dimnames(y ) <- ('y1' 'y2' 'y3')
#y[,1]<-openxl
#y[,2]<-open_yl
#y[,3]<-open_yl
#exampleSim<-cbind(y,open_zl)
est <- VAR(y, p = 10, type = "const")
spilloverDY12(est, n.ahead = 100, no.corr = F)
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 10000)
params_est = list(p = 2, type = "const")
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 10000)
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
data(exampleSim)
# Shorten the data, rolling estimation takes quite some time
exampleSim <- exampleSim[1:600,]
pgd <- read_csv("AU9999_datatd.csv")
#openx <-with(pgd,open)
#open_y <- with(pgd,Open)
openx <-with(pgd,open)
open_y <- with(pgd,Open)
open_z <- with(pgd,Open)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y <- data.frame(y1=openxl,y2=open_yl)
#array(NA,c(32487,3))
#dimnames(y ) <- ('y1' 'y2' 'y3')
#y[,1]<-openxl
#y[,2]<-open_yl
#y[,3]<-open_yl
#exampleSim<-cbind(y,open_zl)
est <- VAR(y, p = 10, type = "const")
spilloverDY12(est, n.ahead = 100, no.corr = F)
params_est = list(p = 2, type = "const")
params_est = list(p = 2, type = "const")
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 10000)
params_est = list(p = 2, type = "const")
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 1000)
plotOverall(sp)
plotFrom(sp)
plotTo(sp)
params_est = list(p = 2, type = "const")
sp <- spilloverRollingDY09(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 3000)
plotOverall(sp)
plotFrom(sp)
plotTo(sp)
plotFrom(sp)
save(sp, file = "C:/Users/Raytine/synchgold/sp999td.rdata")
plotOverall(sp)
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
plotOverall(sp)
plotFrom(sp)
plotTo(sp)
spilloverDY12(est, n.ahead = 100, no.corr = F)
data(SP)
data(sp)
data(sp1.RData)
load(sp1.RData)
load("sp1.RData")
plotOverall(sp)
plotFrom(sp)
plotTo(sp)
load(".RData")
spilloverDY12(est, n.ahead = 100, no.corr = F)
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
spilloverDY12(est, n.ahead = 100, no.corr = F)
load("sp1.RData")
spilloverDY12(est, n.ahead = 100, no.corr = F)
library(readr)
library(readxl)
library(lattice)
library(zoo)
library(quadprog)
library(tseries)
library(urca)
library(vars)
library(ccgarch)
library(fGarch)
library(MASS)
library(FinTS)
library(TTR)
library(fUnitRoots)
library(lmtest)
library(np)
library(quantreg)
library(quantreg)
library(psych)
library(frequencyConnectedness)
data(exampleSim)
# Shorten the data, rolling estimation takes quite some time
exampleSim <- exampleSim[1:600,]
pgd <- read_csv("AU9999_datatd.csv")
#openx <-with(pgd,open)
#open_y <- with(pgd,Open)
openx <-with(pgd,open)
open_y <- with(pgd,Open)
open_z <- with(pgd,Open)
openxl<-log(openx)
open_yl<-log(open_y)
open_zl<-log(open_y)
y <- data.frame(y1=openxl,y2=open_yl)
#array(NA,c(32487,3))
#dimnames(y ) <- ('y1' 'y2' 'y3')
#y[,1]<-openxl
#y[,2]<-open_yl
#y[,3]<-open_yl
#exampleSim<-cbind(y,open_zl)
est <- VAR(y, p = 10, type = "const")
spilloverDY12(est, n.ahead = 100, no.corr = F)
plotTo(sp)
spi.dictionary
sp
sp <- spilloverRollingDY12(y, n.ahead = 100, no.corr = F, "VAR", params_est = params_est, window = 3000)
plotTo(sp)
plotFrom(sp)
To(sp)
to(sp)
tocsv(to(sp),"sp.scv")
write.csv(to(sp),file = "mydata.csv",row.names = F)
write.csv(from(sp),file = "mydata.csv",row.names = F)
write.csv(Overall(sp),file = "mydata.csv",row.names = F)
overall(sp)
write.csv(overall(sp),file = "mydata.csv",row.names = F)
write.csv(overall(sp),file = "mydata.csv",row.names = F)
load("sp1.RData")
write.csv(overall(sp),file = "mydata.csv",row.names = F)
write.csv(to(sp),file = "mydata.csv",row.names = F)
write.csv(from(sp),file = "mydata.csv",row.names = F)
